name: CI/CD Pipeline

on:
  push:
    branches:
      - ws_teste

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check if 'type:' and 'descriptions:' exist in *.sqlx files
        run: |
          if grep -r "type:" --include="*.sqlx" . && grep -r "descriptions:" --include="*.sqlx" .; then
            echo "As palavras 'type:' e 'descriptions:' foram encontradas nos arquivos sqlx."
          else
            echo "As palavras 'type:' e 'descriptions:' NÃO foram encontradas nos arquivos sqlx."
            exit 1
          fi

      - name: Merge ws_teste into development
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          git checkout development
          git pull origin development
          git merge origin/ws_teste --no-ff -m "Merge ws_teste into development"
          git push origin development

  sync_to_dataform:
    runs-on: ubuntu-latest
    needs: build  # Garante que só roda após o job "build" terminar com sucesso

    steps:
      - name: Checkout código do repositório atual
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Garante que todo o histórico está disponível

      - name: Checkout do repositório de destino (dataform)
        uses: actions/checkout@v2
        with:
          repository: RodrigoKartcheski/dataform  # Substitua pelo repositório correto
          token: ${{ secrets.GITHUB_TOKEN }}  # Usa o token de acesso para permissões
          path: dataform_repo  # Faz o checkout em uma pasta separada
          ref: main  # Garante que a branch 'main' seja a branch que será baixada

      - name: Copiar arquivos do diretório "qa" para o repositório "dataform"
        run: |
          cp -r qa/* dataform_repo/  # Copia todos os arquivos do qa para o repositório "dataform"

      - name: Configurar nome de usuário e email para o commit
        run: |
          cd dataform_repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Commit e Push das mudanças para o repositório "dataform"
        run: |
          cd dataform_repo
          git add .
          git commit -m "Atualizando arquivos do diretório 'qa' via CI/CD"
          git push origin main  # Altere para a branch correta do repositório destino, se necessário